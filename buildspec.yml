version: 0.2

env:
    variables:
        PROJECT: dotnet-backend-api
        DOTNET_CORE_RUNTIME: 5.0

    secrets-manager:
        LOGIN: dotnet-backend-secrets/sonar:sonartoken
        HOST: dotnet-backend-secrets/sonar:HOST
        Organization: dotnet-backend-secrets/sonar:Organization
        Project: dotnet-backend-secrets/sonar:Project

phases:   
  install:
    runtime-versions:
      dotnet: ${DOTNET_CORE_RUNTIME}

    commands:
      - echo Installing Entity Framework Core tools reference - .NET CLI
      - dotnet tool install --global dotnet-ef
        
      
  pre_build:
    commands:
      - echo Restore started on `date`
      - cd ./dotnet-backend-api
      - echo ASPNETCORE_ENVIRONMENT is $ASPNETCORE_ENVIRONMENT
      - echo $ConnectionStrings__DBContext
      - echo Info about dbcontext
      - dotnet ef dbcontext info
      - pwd
      - ls
      - apt-get update
      - apt-get install -y jq
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
    #  - dotnet restore dotnet-backend-api.csproj
      
  build:
    commands:
      - echo Build started on `date`
      - dotnet ef database update
      - dotnet sonarscanner end -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi

  post_build:
    commands:
      - echo Publish started on `date`
      - dotnet publish -c Release --runtime linux-x64 /property:PublishWithAspNetCoreTargetManifest=false ./${PROJECT}.csproj --self-contained false 
      - ls
      - cd bin/
      - ls
      - cd Release/
      - ls
      - cd net5.0/
      - ls
      - cd linux-x64/
      - ls
      - cd publish/
      - ls
      - cd ..
      - cd ..
      - cd ..
      - cd ..
      - cd ..
      - dotnet test
      #- cd app/
      #- ls
      #- cd publish/
      #- ls
      #- cd ..
      #- cd ..
      - pwd
      - ls
      
artifacts:
  files:
    - ./dotnet-backend-api/bin/Release/net5.0/linux-x64/publish/**/*
    - ./dotnet-backend-api/Dockerfile
    - ./dotnet-backend-api/taskdef.json
    - ./dotnet-backend-api/appspec.yaml
    - ./db-migrations-spec.yml
  discard-paths: yes